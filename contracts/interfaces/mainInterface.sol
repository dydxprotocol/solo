interface DyDxInterface {
  function ownerSetSpreadPremium ( uint256 marketId, tuple spreadPremium ) external;
  function getIsGlobalOperator ( address operator ) external view returns ( bool );
  function getMarketTokenAddress ( uint256 marketId ) external view returns ( address );
  function ownerSetInterestSetter ( uint256 marketId, address interestSetter ) external;
  function getAccountValues ( tuple account ) external view returns ( tuple, tuple );
  function getMarketPriceOracle ( uint256 marketId ) external view returns ( address );
  function getMarketInterestSetter ( uint256 marketId ) external view returns ( address );
  function getMarketSpreadPremium ( uint256 marketId ) external view returns ( tuple );
  function getNumMarkets (  ) external view returns ( uint256 );
  function ownerWithdrawUnsupportedTokens ( address token, address recipient ) external returns ( uint256 );
  function ownerSetMinBorrowedValue ( tuple minBorrowedValue ) external;
  function ownerSetLiquidationSpread ( tuple spread ) external;
  function ownerSetEarningsRate ( tuple earningsRate ) external;
  function getIsLocalOperator ( address owner, address operator ) external view returns ( bool );
  function getAccountPar ( tuple account, uint256 marketId ) external view returns ( tuple );
  function ownerSetMarginPremium ( uint256 marketId, tuple marginPremium ) external;
  function getMarginRatio (  ) external view returns ( tuple );
  function getMarketCurrentIndex ( uint256 marketId ) external view returns ( tuple );
  function getMarketIsClosing ( uint256 marketId ) external view returns ( bool );
  function getRiskParams (  ) external view returns ( tuple );
  function getAccountBalances ( tuple account ) external view returns ( address[], tuple[], tuple[] );
  function renounceOwnership (  ) external;
  function getMinBorrowedValue (  ) external view returns ( tuple );
  function setOperators ( tuple[] args ) external;
  function getMarketPrice ( uint256 marketId ) external view returns ( tuple );
  function owner (  ) external view returns ( address );
  function isOwner (  ) external view returns ( bool );
  function ownerWithdrawExcessTokens ( uint256 marketId, address recipient ) external returns ( uint256 );
  function ownerAddMarket ( address token, address priceOracle, address interestSetter, tuple marginPremium, tuple spreadPremium ) external;
  function operate ( tuple[] accounts, tuple[] actions ) external;
  function getMarketWithInfo ( uint256 marketId ) external view returns ( tuple, tuple, tuple, tuple );
  function ownerSetMarginRatio ( tuple ratio ) external;
  function getLiquidationSpread (  ) external view returns ( tuple );
  function getAccountWei ( tuple account, uint256 marketId ) external view returns ( tuple );
  function getMarketTotalPar ( uint256 marketId ) external view returns ( tuple );
  function getLiquidationSpreadForPair ( uint256 heldMarketId, uint256 owedMarketId ) external view returns ( tuple );
  function getNumExcessTokens ( uint256 marketId ) external view returns ( tuple );
  function getMarketCachedIndex ( uint256 marketId ) external view returns ( tuple );
  function getAccountStatus ( tuple account ) external view returns ( uint8 );
  function getEarningsRate (  ) external view returns ( tuple );
  function ownerSetPriceOracle ( uint256 marketId, address priceOracle ) external;
  function getRiskLimits (  ) external view returns ( tuple );
  function getMarket ( uint256 marketId ) external view returns ( tuple );
  function ownerSetIsClosing ( uint256 marketId, bool isClosing ) external;
  function ownerSetGlobalOperator ( address operator, bool approved ) external;
  function transferOwnership ( address newOwner ) external;
  function getAdjustedAccountValues ( tuple account ) external view returns ( tuple, tuple );
  function getMarketMarginPremium ( uint256 marketId ) external view returns ( tuple );
  function getMarketInterestRate ( uint256 marketId ) external view returns ( tuple );
}
